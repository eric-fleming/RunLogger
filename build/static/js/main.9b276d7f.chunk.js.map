{"version":3,"sources":["components/runsUI/runsrow.module.css","components/core/icons/coloricon.js","components/sidenav/sideDrawer.js","components/profile/profile.js","pages/mainpage.js","pages/pagenotfound.js","utilities/colorPalette.js","components/core/button/customButton.js","database/runnerinfo.js","components/runnersUI/runnerrow.js","components/addrunners/addrunner.js","components/runnersUI/getRunners.js","database/runinfo.js","components/runsUI/runsrow.js","components/datepicker/datepicker.js","components/addrun/addrun.js","components/runsUI/getRuns.js","pages/databasesearch.js","components/feed/feed.js","components/sidenav/main.js","App.js","serviceWorker.js","colorpalette.js","index.js","components/addrun/addrun.module.css","components/addrunners/addrunner.module.css","components/profile/profile.module.css","utilities/timedata.js"],"names":["module","exports","withStyles","theme","icon","color","backgroundColor","textDecoration","props","classes","type","className","useStyles","makeStyles","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","SideDrawer","main","useTheme","React","useState","open","setOpen","drawerListItems","Room","Mood","DirectionsRun","RssFeed","People","FitnessCenter","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Menu","Typography","variant","noWrap","Drawer","paper","direction","ChevronRight","ChevronLeft","Divider","List","map","item","to","route","ListItem","button","key","name","ListItemIcon","ListItemText","primary","Settings","profile","style","stats","runCount","totalMiles","longestRun","fastestPace","MainPage","PageNotFound","palette","teal","blue","red","green","yellow","cyan","CustomButton","text","startIcon","endIcon","createMuiTheme","overrides","MuiButton","background","Button","mongoAtlasURL_prod","Database","fetchRunners","fetch","then","response","payload","json","JSON","parse","console","log","transformed","i","length","addRunner","doc","firstName","getElementById","value","lastName","city","country","method","headers","body","stringify","first","last","window","location","reload","editRunner","id","runnerid","deleteRunner","message","alert","RunnerRow","scope","prompt","Edit","Delete","AddRunner","name_input","half_no_pad","TextField","label","half_with_pad","document","res","catch","err","GetRunners","runners","setRunners","data","useEffect","runner","fetchRuns","addRun","runner_id","date","distance","parseFloat","hr","parseInt","min","time","editRun","run_uid","new_date","new_dist","new_time","deleteRun","RunsRow","clock_time","TimeData","generateClockTime","pace","generatePace","clean_date","trimDateString","MaterialUIPickers","Date","selectedDate","setSelectedDate","utils","DateFnsUtils","disableToolbar","format","margin","onChange","KeyboardButtonProps","AddRun","margin_rt_lg","idInput","margin_rt","distInput","timeInput","GetRuns","history","setHistory","run","DatabaseSearch","Feed","notMyRuns","filter","Main","exact","path","component","Profile","App","Boolean","hostname","match","light","dark","contrastText","secondary","error","warning","info","success","brand","A100","A200","A400","darker","A700","ReactDOM","render","StrictMode","ThemeProvider","colorPalette","navigator","serviceWorker","ready","registration","unregister","temp","d","t","Number","Math","floor","min_pace","sec","timeIndex","indexOf","substring","americanDateFormat","lastIndexOf"],"mappings":"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","file":"static/js/main.9b276d7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"white\":\"runsrow_white__3_Eoo\"};","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = (theme) => ({\r\n    icon: {\r\n        color: \"aqua\",\r\n        backgroundColor: \"white\",\r\n        textDecoration: \"none\",\r\n        \"&:hover\": {\r\n            color: \"white\",\r\n            backgroundColor: \"aqua\",\r\n            textDecoration: \"none\",\r\n        }\r\n    }\r\n});\r\n\r\n\r\nfunction Icons(props) {\r\n    const { classes, type } = props;\r\n\r\n    return (\r\n        <div className={classes.icon}>\r\n            {type}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Icons);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, ChevronLeft, ChevronRight} from '@material-ui/icons';\r\nimport { Room, Mood, People, RssFeed, FitnessCenter, Settings, DirectionsRun } from '@material-ui/icons';\r\nimport ColorIcon from '../core/icons/coloricon';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        backgroundColor:\"aqua\",\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function SideDrawer(props) {\r\n\r\n    const {main} = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    \r\n    const drawerListItems = [\r\n        { \r\n            'name':'Start',\r\n            'icon':<ColorIcon type={<Room />} />,\r\n            'route': '/'\r\n        },\r\n        {\r\n            'name': 'Me',\r\n            'icon': <ColorIcon type={<Mood />} />,\r\n            'route': '/profile'\r\n        },\r\n        {\r\n            'name': 'runs',\r\n            'icon': <ColorIcon type={<DirectionsRun/>} />,\r\n            'route': '/runs'\r\n        },\r\n        {\r\n            'name': 'Feed',\r\n            'icon': <ColorIcon type={<RssFeed />} />,\r\n            'route': '/feed'\r\n        },\r\n        {\r\n            'name': 'Friends',\r\n            'icon': <ColorIcon type={<People />} />,\r\n            'route': '/runners'\r\n        },\r\n        {\r\n            'name': 'Challenge',\r\n            'icon': <ColorIcon type={<FitnessCenter />} />,\r\n            'route': '/database'\r\n        }\r\n    ];\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {[classes.appBarShift]: open,})}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <Typography variant=\"h3\" noWrap>RunLogger</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRight /> : <ChevronLeft />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {drawerListItems.map(item => (\r\n                        <Link to={item.route}>\r\n                            <ListItem button key={item.name}>\r\n                                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                                <ListItemText primary={item.name} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    ))}\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key=\"Settings\">\r\n                        <ListItemIcon><Settings /></ListItemIcon>\r\n                        <ListItemText primary=\"Settings\" />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                {main}\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport style from './profile.module.css';\r\n\r\nconst profile = (props) => {\r\n\r\n    // could fetch user data here\r\n    \r\n\r\n    return (\r\n        <article className={style.profile}>\r\n            <h2 className={style.name}>Eric Fleming</h2>\r\n            <div className={style.stats}>\r\n                <h3>Stats</h3>\r\n                <ul>\r\n                    <li>Run count: {props.runCount}</li>\r\n                    <li>Total miles: {props.totalMiles}</li>\r\n                    <li>Longest run: {props.longestRun}</li>\r\n                    <li>Fastest pace: {props.fastestPace}</li>\r\n                </ul>\r\n            </div>\r\n\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default profile\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport Profile from '../components/profile/profile';\r\n\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <main>\r\n                <section className=\"left-content\">\r\n                    <Profile runCount=\"535\" totalMiles=\"1600 mi\" longestRun=\"26.2 mi\" fastestPace=\"6:35 min/mi\" />\r\n                </section>\r\n                <section className=\"right-content\">\r\n                    \r\n                </section>\r\n\r\n            </main>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import React from 'react'\r\n\r\nfunction PageNotFound() {\r\n    return (\r\n        <div>\r\n            <h3>404 Error</h3>\r\n            <h3>Page Not Found</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound;\r\n","import { cyan, teal, blue, red, green, yellow } from '@material-ui/core/colors';\r\n\r\n\r\nconst palette = {\r\n    'teal': {\r\n        'light': teal['A200'],\r\n        'main': teal['A400'],\r\n        'dark': teal['A700'],\r\n        'contrastText': '#fff',\r\n    },\r\n    'blue': {\r\n        'light': blue['A200'],\r\n        'main': blue['A400'],\r\n        'dark': blue['A700'],\r\n        'contrastText': '#fff',\r\n    },\r\n    'red': {\r\n        'light': red['A200'],\r\n        'main': red['A400'],\r\n        'dark': red['A700'],\r\n        'contrastText': '#fff',\r\n    },\r\n    'green': {\r\n        'light': green['A200'],\r\n        'main': green['A400'],\r\n        'dark': green['A700'],\r\n        'contrastText': '#fff',\r\n    },\r\n    'yellow': {\r\n        'light': yellow['A200'],\r\n        'main': yellow['A400'],\r\n        'dark': yellow['A700'],\r\n        'contrastText': '#fff',\r\n    },\r\n    'cyan': {\r\n        'light': cyan['A200'],\r\n        'main': cyan['A400'],\r\n        'dark': cyan['A700'],\r\n        'contrastText': '#fff',\r\n    }\r\n}\r\n\r\nexport default palette;\r\n\r\n\r\n\r\n// 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n// boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)'","import React from 'react';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport palette from '../../../utilities/colorPalette';\r\n\r\n\r\nconst CustomButton = (props) => {\r\n    const { text, color, onClick, startIcon, endIcon} = props;\r\n\r\n    const theme = createMuiTheme({\r\n        overrides: {\r\n            // Name of the component ⚛️ / style sheet\r\n            MuiButton: {\r\n                // Name of the rule\r\n                text: {\r\n                    // Some CSS\r\n                    background: palette[color]['main'],\r\n                    color: palette[color]['contrastText'],\r\n                    '&:hover': {\r\n                        backgroundColor: palette[color]['dark'],\r\n                    },\r\n                },\r\n            },\r\n        }\r\n    });\r\n    \r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n            <Button\r\n                    onClick={onClick}\r\n                    startIcon={startIcon}\r\n                    endIcon={endIcon}>\r\n                {text}\r\n            </Button>\r\n        </MuiThemeProvider>\r\n    );\r\n}\r\n\r\nexport default CustomButton;","\r\nconst mongoAtlasURL_dev = 'http://localhost:3001/mongo';\r\nconst mongoAtlasURL_prod = 'https://runloggerdb.herokuapp.com/mongo';\r\n\r\n\r\n\r\nfunction fetchRunners() {\r\n    let data = fetch(`${mongoAtlasURL_prod}/runners`)\r\n        .then(response => {\r\n            //return response.text();\r\n            return response.text();\r\n        })\r\n        .then(payload => {\r\n            let json = JSON.parse(payload);\r\n            console.log(json);\r\n            // payloads are json represented as strings with one key (data)\r\n            let transformed = [];\r\n            for (let i = 0; i < json.length; i++) {\r\n                let item = json[i];\r\n                transformed[i] = {\r\n                    'id': item['_id'],\r\n                    'first': item['name']['first'],\r\n                    'last': item['name']['last']\r\n                };\r\n            }\r\n            return transformed;\r\n        });\r\n    return data;\r\n};\r\n\r\nfunction addRunner(doc){\r\n    // doc is the document opject from the calling component\r\n    let firstName = doc.getElementById('firstName').value;\r\n    let lastName = doc.getElementById('lastName').value;\r\n    console.log(`did the name catch ?? ${firstName} ${lastName}`);\r\n    let city = doc.getElementById('city').value;\r\n    let country = doc.getElementById('country').value;\r\n\r\n    let data = fetch(`${mongoAtlasURL_prod}/runner`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \r\n            first: firstName,\r\n            last: lastName,\r\n            city: city,\r\n            country:country\r\n        })\r\n    })\r\n        .then(response => {\r\n            console.log(response.text());\r\n            window.location.reload();\r\n        })\r\n    return data;\r\n}\r\n\r\n\r\nfunction editRunner(id, first, last) {\r\n\r\n    fetch(`${mongoAtlasURL_prod}/runner/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            runnerid: id,\r\n            first: first,\r\n            last: last,\r\n        })\r\n    })\r\n        .then(response => {\r\n            console.log(response.text());\r\n            window.location.reload();\r\n        })\r\n}\r\n\r\nfunction deleteRunner(id) {\r\n    fetch(`${mongoAtlasURL_prod}/runner/${id}`,\r\n        {\r\n            method: 'DELETE',\r\n        })\r\n        .then(response => {\r\n            return response.text()\r\n        })\r\n        .then(message => {\r\n            alert(message);\r\n            window.location.reload();\r\n        })\r\n}\r\n\r\nconst Database = {\r\n    fetchRunners,\r\n    addRunner,\r\n    editRunner,\r\n    deleteRunner\r\n}\r\n\r\nexport default Database;","import React from 'react'\r\nimport { Edit, Delete} from '@material-ui/icons';\r\nimport CustomButton from '../core/button/customButton';\r\n\r\n//old\r\n//import AccessRunnerData from './accessRunnerData';\r\n//new\r\nimport Database from '../../database/runnerinfo';\r\n\r\nconst RunnerRow = (props) => {\r\n    const { id, first, last } = props;\r\n\r\n    function editRunner(){\r\n        console.log(`Making changes to the Runner fields`);\r\n        let firstName = prompt(`Your (new) first name?`) || first;\r\n        let lastName = prompt(`Your (new) last name?`) || last;\r\n        Database.editRunner(id,firstName,lastName);\r\n    }\r\n\r\n    function deleteRunner(){\r\n        Database.deleteRunner(id);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{id}</th>\r\n            <td>{first}</td>\r\n            <td>{last}</td>\r\n            <td>\r\n                <CustomButton text=\"Edit\" color=\"yellow\" onClick={editRunner} startIcon={<Edit />}></CustomButton>\r\n                <CustomButton text=\"Delete\" color=\"red\" onClick={deleteRunner} startIcon={<Delete />}></CustomButton>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RunnerRow\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport style from './addrunner.module.css';\r\n\r\nimport Database from '../../database/runnerinfo';\r\n\r\nfunction AddRunner() {\r\n\r\n    const add = () => {\r\n        let doc = document;\r\n        \r\n        Database.addRunner(doc)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n            <form>\r\n                <div className={style.name_input}>\r\n                    <div className={style.half_no_pad}>\r\n                        <TextField id=\"firstName\" label=\"first name\" />\r\n                    </div>\r\n                    <div className={style.half_with_pad}>\r\n                        <TextField id=\"lastName\" label=\"last name\" />\r\n                    </div>\r\n                </div>\r\n                <div className={style.name_input}>\r\n                    <div className={style.half_no_pad}>\r\n                        <TextField id=\"city\" label=\"city\" />\r\n                    </div>\r\n                    <div className={style.half_with_pad}>\r\n                        <TextField id=\"country\" label=\"country\" />\r\n                    </div>\r\n                </div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={add} endIcon={<AddIcon />}>\r\n                    Add\r\n                </Button>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default AddRunner\r\n","import React, { useState, useEffect } from 'react';\r\nimport RunnerRow from './runnerrow';\r\nimport AddRunners from '../addrunners/addrunner';\r\nimport CustomButton from '../core/button/customButton';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\n\r\n//old\r\n//import AccessRunnerData from './accessRunnerData';\r\n//new\r\nimport Database from '../../database/runnerinfo';\r\n\r\n\r\nfunction GetRunners() {\r\n\r\n    const [runners, setRunners] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchRunners();\r\n    }, []);\r\n\r\n\r\n    function fetchRunners() {\r\n        Database.fetchRunners()\r\n            .then(data => setRunners(data));\r\n        ;\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Add a Runner</h3>\r\n            <AddRunners />\r\n            <br/>\r\n            <CustomButton text=\"update\" color=\"green\" onClick={fetchRunners} endIcon={<SyncIcon />}>Update Runners</CustomButton>\r\n            <br />\r\n            <br/>\r\n            <table className=\"table\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">ID#</th>\r\n                        <th scope=\"col\">First</th>\r\n                        <th scope=\"col\">Last</th>\r\n                        <th scope=\"col\">Changes</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {runners.map(runner => (\r\n                        <RunnerRow\r\n                            key={runner.id}\r\n                            id={runner.id}\r\n                            first={runner.first}\r\n                            last={runner.last}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GetRunners;\r\n//{runners ? runners : 'There are no runers in the database'}","const mongoAtlasURL_dev = 'http://localhost:3001/mongo';\r\nconst mongoAtlasURL_prod = 'https://runloggerdb.herokuapp.com/mongo';\r\n\r\n\r\nfunction fetchRuns() {\r\n    let data = fetch(`${mongoAtlasURL_prod}/runs`)\r\n        .then(response => {\r\n            return response.text();\r\n        })\r\n        .then(payload => {\r\n            let json = JSON.parse(payload);\r\n            console.log(json);\r\n            return json;\r\n            \r\n        });\r\n    return data;\r\n};\r\n\r\n\r\nconst addRun = (doc) => {\r\n    // doc is the document object from the calling function\r\n    let runner_id = doc.getElementById('runner_id').value;\r\n    let date = doc.getElementById('date-picker').value;\r\n    let distance = parseFloat(doc.getElementById('dist').value);\r\n    let hr = parseInt(doc.getElementById('time-hr').value);\r\n    let min = parseInt(doc.getElementById('time-min').value);\r\n    let sec = parseInt(doc.getElementById('time-sec').value);\r\n\r\n    // time is stored in seconds\r\n    let time = (sec + 60 * min + 3600 * hr);\r\n\r\n    let data = fetch(`${mongoAtlasURL_prod}/run`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            runner_id: runner_id,\r\n            date: date,\r\n            distance: distance,\r\n            time: time,\r\n        })\r\n    })\r\n        .then(response => {\r\n            console.log(response.text());\r\n            window.location.reload();\r\n        })\r\n    return data;\r\n}\r\n\r\n\r\n\r\nfunction editRun(runner_id,run_uid,date,distance,time) {\r\n    console.log(`Making changes to the Run fields`);\r\n    let new_date = prompt(`Your (new) date? Or hit cancel.`);\r\n    let new_dist = prompt(`Your (new) dist? Or hit cancel.`);\r\n    let new_time = prompt(`Your (new) time? Or hit cancel.`);\r\n\r\n    let data = fetch(`http://localhost:3001/runs/${run_uid}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            run_uid: run_uid,\r\n            runner_id: runner_id,\r\n            date: new_date || date,\r\n            distance: new_dist || distance,\r\n            time: new_time || time\r\n        })\r\n    })\r\n        .then(response => {\r\n            console.log(response.text());\r\n            window.location.reload();\r\n        })\r\n    return data;\r\n}\r\n\r\nfunction deleteRun(run_uid) {\r\n    let data = fetch(`http://localhost:3001/runs/${run_uid}`,\r\n        {\r\n            method: 'DELETE',\r\n        })\r\n        .then(response => {\r\n            return response.text()\r\n        })\r\n        .then(message => {\r\n            alert(message);\r\n            window.location.reload();\r\n        })\r\n    return data;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Database = {\r\n    fetchRuns,\r\n    addRun,\r\n    editRun,\r\n    deleteRun\r\n}\r\n\r\nexport default Database;","import React from 'react';\r\nimport './runsrow.module.css';\r\nimport { Edit, Delete} from '@material-ui/icons';\r\nimport TimeData from '../../utilities/timedata';\r\nimport CustomButton from '../core/button/customButton';\r\n\r\nimport Database from '../../database/runinfo';\r\n\r\nconst RunsRow = (props) => {\r\n\r\n    const { run_uid, runner_id, date, distance, time } = props;\r\n\r\n    let clock_time = TimeData.generateClockTime(time);\r\n    let pace = TimeData.generatePace(distance,time);\r\n    let clean_date = TimeData.trimDateString(date);\r\n\r\n    \r\n    function editRun(){\r\n        Database.editRun(run_uid)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function deleteRun(){\r\n        Database.deleteRun(run_uid)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{runner_id}</th>\r\n            <td>{clean_date}</td>\r\n            <td>{distance}</td>\r\n            <td>{clock_time}</td>\r\n            <td>{pace}</td>\r\n            <td>\r\n                <CustomButton text=\"Edit\" color=\"yellow\" onClick={editRun} startIcon={<Edit />} />\r\n                <CustomButton text=\"Delete\" color=\"red\" onClick={deleteRun} startIcon={<Delete />} />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RunsRow\r\n","import 'date-fns';\r\nimport React, { useState } from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function MaterialUIPickers() {\r\n    // The first commit of Material-UI\r\n    const [selectedDate, setSelectedDate] = useState(new Date('2020-08-01'));\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date-picker\"\r\n                label=\"Date picker inline\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}","import React from 'react';\r\nimport style from './addrun.module.css';\r\nimport { TextField } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport DatePicker from '../datepicker/datepicker';\r\nimport CustomButton from '../core/button/customButton';\r\n\r\nimport Database from '../../database/runinfo';\r\n\r\n\r\n\r\nconst AddRun = () => {\r\n\r\n    const add = () => {\r\n        let doc = document;\r\n\r\n        Database.addRun(doc)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <div>\r\n                <div className={style.margin_rt_lg}>\r\n                    <TextField className={style.idInput} id=\"runner_id\" label=\"Runner ID\" />\r\n                </div>\r\n                <div className={style.margin_rt}>\r\n                    <DatePicker />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className={style.margin_rt_lg}>\r\n                    <TextField className={style.distInput} id=\"dist\" label=\"Distance\" />\r\n                </div>\r\n                <div className={style.margin_rt}>\r\n                    <TextField className={style.timeInput} id=\"time-hr\" label=\"hr\" />\r\n                </div>\r\n                <div className={style.margin_rt}>\r\n                    <TextField className={style.timeInput} id=\"time-min\" label=\"min\" />\r\n                </div>\r\n                <div className={style.margin_rt_lg}>\r\n                    <TextField className={style.timeInput} id=\"time-sec\" label=\"sec\" />\r\n                </div>\r\n                <CustomButton onClick={add} text=\"Enter Run\" color=\"cyan\" endIcon={<SendIcon />}></CustomButton>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddRun\r\n","import React, { useState, useEffect } from 'react';\r\nimport RunsRow from './runsrow';\r\nimport AddRun from '../addrun/addrun';\r\n\r\nimport Database from '../../database/runinfo';\r\n\r\nfunction GetRuns() {\r\n\r\n    const [history, setHistory] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchHistory();\r\n    }, []);\r\n\r\n\r\n    function fetchHistory() {\r\n        Database.fetchRuns()\r\n            .then(data => setHistory(data));\r\n        \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Running History</h3>\r\n            <br />\r\n            <div>\r\n                <AddRun />\r\n            </div>\r\n            <table className=\"table\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">date</th>\r\n                        <th scope=\"col\">dist</th>\r\n                        <th scope=\"col\">time</th>\r\n                        <th scope=\"col\">pace</th>\r\n                        <th scope=\"col\">changes</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {history.map(run => (\r\n                        \r\n                        <RunsRow\r\n                            key={run.run_uid}\r\n                            run_uid={run.run_uid}\r\n                            runner_id={run.runnerid}\r\n                            date={run.date}\r\n                            distance={run.distance}\r\n                            time={run.time}\r\n                            pace={run.pace}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GetRuns;\r\n// {history ? history : 'There are no run history in the database'}","import React from 'react'\r\nimport GetRunners from '../components/runnersUI/getRunners';\r\nimport GetRuns from '../components/runsUI/getRuns';\r\n\r\nfunction DatabaseSearch() {\r\n    return (\r\n        <section>\r\n            <h2>Test DB Output</h2>\r\n            <div>\r\n                <GetRunners />\r\n            </div>\r\n            <div>\r\n                <GetRuns />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default DatabaseSearch;\r\n","import React, { useState, useEffect } from 'react';\r\nimport RunsRow from './../runsUI/runsrow';\r\n\r\nfunction Feed() {\r\n\r\n    const [history, setHistory] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchHistory();\r\n    }, []);\r\n\r\n\r\n    function fetchHistory() {\r\n        fetch('http://localhost:3001/runs')\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(payload => {\r\n                let json = JSON.parse(payload);\r\n                // payloads are json represented as strings with one key (data)\r\n                let notMyRuns = json.data.filter(run => run.runnerid !== \"1\");\r\n                setHistory(notMyRuns);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Feed</h3>\r\n\r\n            <table className=\"table\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">date</th>\r\n                        <th scope=\"col\">dist</th>\r\n                        <th scope=\"col\">time</th>\r\n                        <th scope=\"col\">pace</th>\r\n                        <th scope=\"col\">changes</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {history.map(run => (\r\n\r\n                        <RunsRow\r\n                            key={run.run_uid}\r\n                            run_uid={run.run_uid}\r\n                            id={run.runnerid}\r\n                            date={run.date}\r\n                            distance={run.distance}\r\n                            time={run.time}\r\n                            pace={run.pace}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport { Route, Switch, Redirect} from 'react-router-dom';\r\n\r\n// Components\r\n\r\nimport MainPage from '../../pages/mainpage';\r\nimport PageNotFound from '../../pages/pagenotfound';\r\nimport DatabaseSearch from '../../pages/databasesearch';\r\n\r\nimport Profile from '../profile/profile';\r\nimport GetRunners from '../runnersUI/getRunners';\r\nimport GetRuns from '../runsUI/getRuns';\r\nimport Feed from '../feed/feed';\r\n\r\n\r\nconst Main = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"main_component\">\r\n            <Switch >\r\n                <Route exact path=\"/\" component={MainPage} />\r\n                <Route exact path=\"/profile\" component={Profile} />\r\n                <Route exact path=\"/database\" component={DatabaseSearch} />\r\n                <Route exact path=\"/runners\" component={GetRunners} />\r\n                <Route exact path=\"/runs\" component={GetRuns} />\r\n                <Route exact path=\"/feed\" component={Feed} />\r\n                <Route exact path=\"/404\" component={PageNotFound} />\r\n                <Redirect to=\"/404\" />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n// Components\r\nimport SideDrawer from './components/sidenav/sideDrawer';\r\nimport Main from './components/sidenav/main';\r\n\r\n\r\nfunction App() {\r\n\r\n  // could fetch user data here\r\n  // then pass it into the profile component\r\n\r\n  return (\r\n    <Router>\r\n      <SideDrawer main={<Main/>} />\r\n      \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport cyan from '@material-ui/core/colors/cyan';\r\n\r\n\r\nconst theme =  createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#4791db',\r\n            main: '#1976d2',\r\n            dark: '#115293',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#e33371',\r\n            main: '#dc004e',\r\n            dark: '#9a0036',\r\n            contrastText: '#000',\r\n        },\r\n        error: {\r\n            light: '#e57373',\r\n            main: '#f44336',\r\n            dark: '#d32f2f',\r\n            contrastText: '#000',\r\n        },\r\n        warning: {\r\n            light: '#ffb74d',\r\n            main: '#ff9800',\r\n            dark: '#f57c00',\r\n            contrastText: '#000',\r\n        },\r\n        info: {\r\n            light: '#64b5f6',\r\n            main: '#2196f3',\r\n            dark: '#1976d2',\r\n            contrastText: '#000',\r\n        },\r\n        success: {\r\n            light: '#81c784',\r\n            main: '#4caf50',\r\n            dark: '#388e3c',\r\n            contrastText: '#000',\r\n        },\r\n        brand: {\r\n            light: cyan.A100,\r\n            main: cyan.A200,\r\n            dark: cyan.A400,\r\n            darker: cyan.A700,\r\n            contrastText: '#000',\r\n        },\r\n    },\r\n    \r\n});\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport colorPalette from './colorpalette';\r\n\r\n// Picker\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={colorPalette}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <App />\r\n      </MuiPickersUtilsProvider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"idInput\":\"addrun_idInput__3eWxU\",\"timeInput\":\"addrun_timeInput__2kYwf\",\"distInput\":\"addrun_distInput__1dUgU\",\"margin_rt\":\"addrun_margin_rt__1X_D7\",\"margin_rt_lg\":\"addrun_margin_rt_lg__1yy_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name_input\":\"addrunner_name_input__2XwAh\",\"half_no_pad\":\"addrunner_half_no_pad__3Qu_T\",\"half_with_pad\":\"addrunner_half_with_pad__KYuCN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__1HbGp\",\"name\":\"profile_name__1efXH\",\"stats\":\"profile_stats__1SMnW\"};","\r\nfunction generateClockTime(time) {\r\n    let clock_time = [0, 0, 0];\r\n    while (time > 0) {\r\n        if (time >= 3600) {\r\n            clock_time[0]++;\r\n            time -= 3600;\r\n        }\r\n        else if (time >= 60) {\r\n            clock_time[1]++;\r\n            time -= 60;\r\n        }\r\n        else {\r\n            clock_time[2] = time;\r\n            break;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n        let temp = clock_time[i]\r\n        if (temp < 10) {\r\n            clock_time[i] = \"0\" + temp;\r\n        }\r\n    }\r\n\r\n    clock_time = `${clock_time[0]}:${clock_time[1]}:${clock_time[2]}`;\r\n    return clock_time;\r\n}\r\n\r\nfunction generatePace(d, t) {\r\n    t = Number(t);\r\n    let hr_limit = Math.floor(Number(t) / (d * 3600));\r\n\r\n    if (hr_limit === 0) {\r\n        let min_pace = t / (d * 60);\r\n        let min = Math.floor(min_pace);\r\n        let sec = Math.floor(60 * (min_pace - min));\r\n        if (sec < 10) {\r\n            sec = `0${sec}`;\r\n        }\r\n        return `${min}:${sec} min/mi`;\r\n    }\r\n    else {\r\n        return `pace is over an hour per mile`;\r\n    }\r\n\r\n}\r\n\r\nfunction trimDateString(date) {\r\n    let timeIndex = date.indexOf(\"T\");\r\n    if (timeIndex >= 0) {\r\n        return date.substring(0, timeIndex);\r\n    }\r\n    return date;\r\n}\r\n\r\nfunction americanDateFormat(date) {\r\n    let first = date.indexOf('-');\r\n    let last = date.lastIndexOf('-');\r\n    return (date.substring(first + 1, last) + '-' + date.substring(last + 1) + '-' + date.substring(0, first));\r\n}\r\n\r\nmodule.exports = {\r\n    generateClockTime,\r\n    generatePace,\r\n    trimDateString,\r\n    americanDateFormat,\r\n}"],"sourceRoot":""}